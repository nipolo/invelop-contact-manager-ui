{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/core/constants/index.ts","./src/app/core/constants/regex-validations.ts","./src/app/core/constants/ui-routes.ts","./src/app/core/constants/url-routes.ts","./src/app/core/core.module.ts","./src/app/core/enums/component-mode.enum.ts","./src/app/core/enums/index.ts","./src/app/core/index.ts","./src/app/core/primeng/index.ts","./src/app/core/primeng/primeng.module.ts","./src/app/core/services/index.ts","./src/app/core/services/notification/index.ts","./src/app/core/services/notification/notification.service.ts","./src/app/core/services/url-generation/index.ts","./src/app/core/services/url-generation/url-generation.service.ts","./src/app/core/store/actions/contact.actions.ts","./src/app/core/store/actions/index.ts","./src/app/core/store/index.ts","./src/app/core/store/models/index.ts","./src/app/core/store/reducers/contacts.reducer.ts","./src/app/core/store/reducers/index.ts","./src/app/core/store/reducers/root.reducer.ts","./src/app/core/store/selectors/contact.selectors.ts","./src/app/core/store/selectors/index.ts","./src/app/core/store/states/contacts.state.ts","./src/app/core/store/states/index.ts","./src/app/core/store/states/root.state.ts","./src/app/core/store/storage.meta-reducer.ts","./src/app/shared/index.ts","./src/app/shared/primeng/index.ts","./src/app/shared/primeng/primeng.module.ts","./src/app/shared/shared.module.ts","./src/environments/environment.beta.ts","./src/environments/environment.type.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { uiRoutes } from '@core/constants';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: uiRoutes.contactsModule.base,\r\n    pathMatch: 'full',\r\n  },\r\n  {\r\n    path: uiRoutes.contactsModule.base,\r\n    loadChildren: () =>\r\n      import('./contacts/contacts.module').then((m) => m.ContactsModule),\r\n  },\r\n  {\r\n    path: '**',\r\n    redirectTo: '',\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {}\n","<router-outlet></router-outlet>\n<p-toast position=\"bottom-right\"></p-toast>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CoreModule } from './core';\nimport { SharedModule } from './shared';\nimport { StoreModule, MetaReducer } from '@ngrx/store';\nimport { storageMetaReducer } from '@core/store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { environment } from '../environments/environment';\n\nexport const metaReducers: MetaReducer<any>[] = [storageMetaReducer];\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    CoreModule,\n    SharedModule,\n    StoreModule.forRoot({}, { metaReducers }),\n    StoreDevtoolsModule.instrument({\n      maxAge: 25,\n      logOnly: environment.production,\n      autoPause: true,\n      name: 'Contact Manager',\n    }),\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","export * from './url-routes';\r\nexport * from './ui-routes';\r\nexport * from './regex-validations';\r\n","export class RegexValidationsConsts {\r\n  static PhoneNumber = '^\\\\+?[0-9]+(-[0-9]+)*$';\r\n  static IBAN = '^[A-Z]{2}[0-9]{2}(-[0-9A-Z]{1,4})+$';\r\n}\r\n","export const uiRoutes = {\r\n  contactsModule: {\r\n    base: 'contacts',\r\n    routes: {\r\n      allContacts: 'all',\r\n      addContact: 'add',\r\n      updateContact: { base: 'update', withParams: 'update/:id' },\r\n    },\r\n  },\r\n};\r\n\r\nexport const absoluteUIUrls = {\r\n  allContacts: '/contacts/all',\r\n  addContact: '/contacts/add',\r\n  updateContact: {\r\n    base: '/contacts/update',\r\n    withParams: '/contacts/update/:id',\r\n  },\r\n};\r\n","export const urlRoutes = {\r\n  getGetAllContacts: (pageNum: number, pageSize: number) =>\r\n    `contacts/all?pageNum=${pageNum}&pageSize=${pageSize}`,\r\n  postCreateContact: 'contacts',\r\n  putUpdateContact: 'contacts',\r\n  deleteRemoveContact: 'contacts',\r\n};\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { PrimeNGModule } from './primeng';\r\nimport { MessageService } from 'primeng/api';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [CommonModule, HttpClientModule, PrimeNGModule],\r\n  providers: [MessageService],\r\n})\r\nexport class CoreModule {}\r\n","export enum ComponentModeType {\r\n  Add = 1,\r\n  Edit = 2,\r\n}\r\n","export * from './component-mode.enum';\r\n","export * from './core.module';\r\nexport * from './services';\r\nexport * from './constants';\r\nexport * from './store';\r\nexport * from './enums';\r\n","export * from './primeng.module';\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { ToastModule } from 'primeng/toast';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [ToastModule],\r\n  exports: [],\r\n})\r\nexport class PrimeNGModule {}\r\n","export * from './notification';\r\nexport * from './url-generation';\r\n","export * from './notification.service';\r\n","import { Injectable } from '@angular/core';\r\nimport { MessageService } from 'primeng/api';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class NotificationService {\r\n  constructor(private messageService: MessageService) {}\r\n\r\n  info(message: string) {\r\n    this.messageService.add({\r\n      severity: 'info',\r\n      summary: 'Info',\r\n      detail: message,\r\n    });\r\n  }\r\n\r\n  error(message: string) {\r\n    this.messageService.add({\r\n      severity: 'error',\r\n      summary: 'Error',\r\n      detail: message,\r\n    });\r\n  }\r\n}\r\n","export * from './url-generation.service';\r\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UrlGenerationService {\n  constructor() {}\n\n  getApiEndpointUrl(endpoint: string) {\n    return environment.apiUrl + endpoint;\n  }\n}\n","import { createAction, props } from '@ngrx/store';\nimport { ContactModel } from '../models';\n\nexport const loadContacts = createAction('[Contacts] Load Contacts');\n\nexport const loadContactsSuccess = createAction(\n  '[Contacts] Load Contacts Success',\n  props<{ contacts: ContactModel[]; totalContacts: number }>()\n);\n\nexport const loadContactsFailure = createAction(\n  '[Contacts] Load Contacts Failure',\n  props<{ error: any }>()\n);\n","export * from './contact.actions';\r\n","export * from './actions';\r\nexport * from './models';\r\nexport * from './reducers';\r\nexport * from './selectors';\r\nexport * from './states';\r\nexport * from './storage.meta-reducer';\r\n","export * from './contact.model';\r\nexport * from './address.model';\r\n","import { createFeature, createReducer, on } from '@ngrx/store';\r\nimport { loadContactsSuccess } from '../actions';\r\nimport { initialContactsState } from '../states';\r\n\r\nexport const contactsFeature = createFeature({\r\n  name: 'contacts',\r\n  reducer: createReducer(\r\n    initialContactsState,\r\n    on(loadContactsSuccess, (state, { contacts, totalContacts }) => ({\r\n      ...state,\r\n      contacts,\r\n      totalContacts,\r\n    }))\r\n  ),\r\n});\r\n","export * from './root.reducer';\r\nexport * from './contacts.reducer';\r\n","import { createReducer } from '@ngrx/store';\r\nimport { initialRootState } from '../states';\r\n\r\nexport const rootReducer = createReducer(initialRootState);\r\n","import { createSelector } from '@ngrx/store';\r\nimport { AppState, ContactsState } from '../states';\r\n\r\nconst selectContactsFeature = (state: AppState) => state.contacts;\r\n\r\nexport const selectContacts = createSelector(\r\n  selectContactsFeature,\r\n  (state: ContactsState) => state?.contacts\r\n);\r\n\r\nexport const selectTotalContacts = createSelector(\r\n  selectContactsFeature,\r\n  (state: ContactsState) => state?.totalContacts\r\n);\r\n\r\nexport const selectContact = (id: number) =>\r\n  createSelector(selectContactsFeature, (state: ContactsState) =>\r\n    state.contacts.find((c) => c.id === id)\r\n  );\r\n","export * from './contact.selectors';\r\n","import { ContactModel } from '../models';\r\n\r\nexport interface ContactsState {\r\n  contacts: ContactModel[];\r\n  totalContacts: number;\r\n}\r\n\r\nexport const initialContactsState: ContactsState = {\r\n  contacts: [],\r\n  totalContacts: 0,\r\n};\r\n","export * from './root.state';\r\nexport * from './app.state';\r\nexport * from './contacts.state';\r\n","export interface RootState {}\r\n\r\nexport const initialRootState: RootState = {};\r\n","import { ActionReducer, Action, INIT } from '@ngrx/store';\r\n\r\nfunction setSavedState(state: any, localStorageKey: string) {\r\n  localStorage.setItem(localStorageKey, JSON.stringify(state));\r\n}\r\nfunction getSavedState(localStorageKey: string): any {\r\n  return JSON.parse(localStorage.getItem(localStorageKey) || '{}');\r\n}\r\n\r\nconst localStorageKey = 'contactManagerState';\r\n\r\nexport function storageMetaReducer<S, A extends Action = Action>(\r\n  reducer: ActionReducer<S, A>\r\n) {\r\n  return function (state: S, action: A): S {\r\n    if (action.type == INIT) {\r\n      const savedState = getSavedState(localStorageKey);\r\n      return savedState;\r\n    }\r\n\r\n    const nextState = reducer(state, action);\r\n    setSavedState(nextState, localStorageKey);\r\n\r\n    return nextState;\r\n  };\r\n}\r\n","export * from './shared.module';\r\nexport * from './primeng';\r\n","export * from './primeng.module';\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { ToastModule } from 'primeng/toast';\r\nimport { TableModule } from 'primeng/table';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { RippleModule } from 'primeng/ripple';\r\nimport { ToolbarModule } from 'primeng/toolbar';\r\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\r\nimport { PaginatorModule } from 'primeng/paginator';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { CalendarModule } from 'primeng/calendar';\r\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\r\nimport { ConfirmationService } from 'primeng/api';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    ToastModule,\r\n    TableModule,\r\n    ButtonModule,\r\n    RippleModule,\r\n    ToolbarModule,\r\n    ProgressSpinnerModule,\r\n    PaginatorModule,\r\n    InputTextModule,\r\n    CalendarModule,\r\n    ConfirmDialogModule,\r\n  ],\r\n  providers: [ConfirmationService],\r\n  exports: [\r\n    ToastModule,\r\n    TableModule,\r\n    ButtonModule,\r\n    RippleModule,\r\n    ToolbarModule,\r\n    ProgressSpinnerModule,\r\n    PaginatorModule,\r\n    InputTextModule,\r\n    CalendarModule,\r\n    ConfirmDialogModule,\r\n  ],\r\n})\r\nexport class PrimeNGModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { PrimeNGModule } from './primeng';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, ReactiveFormsModule, PrimeNGModule],\r\n  exports: [CommonModule, ReactiveFormsModule, PrimeNGModule],\r\n})\r\nexport class SharedModule {}\r\n","import { EnvironmentType } from './environment.type';\r\n\r\nexport const environment = {\r\n  name: EnvironmentType.Beta,\r\n  production: false,\r\n  apiUrl: 'http://192.168.136.92:3001/api/',\r\n};\r\n","export enum EnvironmentType {\r\n  Development = 1,\r\n  Beta = 2,\r\n  Production = 3,\r\n}\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///"}